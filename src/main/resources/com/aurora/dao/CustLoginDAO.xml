<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aurora.dao.CustLoginDAO">
  <resultMap id="BaseResultMap" type="com.aurora.model.entity.CustLogin">
    <id column="login_id" jdbcType="INTEGER" property="loginId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd" />
    <result column="login_time" jdbcType="DATE" property="loginTime" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_status" jdbcType="INTEGER" property="loginStatus" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
  </resultMap>

  <resultMap id="customer" type="com.aurora.entity.Customer">
    <id column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="cust_name" jdbcType="VARCHAR" property="custName" />
    <result column="cust_pwd" jdbcType="VARCHAR" property="custPwd" />
    <result column="cust_age" jdbcType="INTEGER" property="custAge" />
    <result column="cust_phone" jdbcType="INTEGER" property="custPhone" />
    <result column="cust_email" jdbcType="VARCHAR" property="custEmail" />
    <result column="cust_create_time" jdbcType="TIMESTAMP" property="custCreateTime" />
    <result column="cust_update_time" jdbcType="TIMESTAMP" property="custUpdateTime" />
    <result column="cust_profile" jdbcType="VARCHAR" property="custProfile" />
  </resultMap>

  <sql id="Base_Column_List">
    login_id, login_name, login_pwd, login_time, login_ip, login_status, cust_id
  </sql>

  <!--判断用户登录的手机号与密码是否正确-->
  <select id="checkTelnoAndPwd" resultMap="customer">
    select cust_id,cust_name, cust_pwd,
           cust_age, cust_phone, cust_email,
           cust_create_time, cust_update_time, cust_profile
    from customer
    where cust_phone = #{telno} and cust_pwd = #{password}
  </select>

  <!-- 判断用户登录的邮箱与密码是否正确-->
  <select id="checkEmailAndPwd" resultMap="customer">
    select cust_id,cust_name, cust_pwd,
           cust_age, cust_phone, cust_email,
           cust_create_time, cust_update_time, cust_profile
    from customer
    where cust_email = #{email} and cust_pwd = #{password}
  </select>

<!--添加登录记录-->
  <insert id="save" parameterType="com.aurora.entity.CustLogin">
    insert into cust_login (login_id, login_name, login_pwd,
                            login_time, login_ip, login_status,
                            cust_id)
    values (#{loginId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR},
            #{loginTime,jdbcType=DATE}, #{loginIp,jdbcType=VARCHAR}, #{loginStatus,jdbcType=INTEGER},
            #{custId,jdbcType=INTEGER})
  </insert>





  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cust_login
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cust_login
    where login_id = #{loginId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aurora.model.entity.CustLogin">
    insert into cust_login (login_id, login_name, login_pwd, 
      login_time, login_ip, login_status, 
      cust_id)
    values (#{loginId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=DATE}, #{loginIp,jdbcType=VARCHAR}, #{loginStatus,jdbcType=INTEGER}, 
      #{custId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aurora.model.entity.CustLogin">
    insert into cust_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        login_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPwd != null">
        login_pwd,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginStatus != null">
        login_status,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null">
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=DATE},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginStatus != null">
        #{loginStatus,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aurora.model.entity.CustLogin">
    update cust_login
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null">
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=DATE},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginStatus != null">
        login_status = #{loginStatus,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aurora.model.entity.CustLogin">
    update cust_login
    set login_name = #{loginName,jdbcType=VARCHAR},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=DATE},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_status = #{loginStatus,jdbcType=INTEGER},
      cust_id = #{custId,jdbcType=INTEGER}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>