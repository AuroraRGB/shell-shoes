<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aurora.dao.ShoesDAO">
  <resultMap id="BaseResultMap" type="com.aurora.model.entity.Shoes">
    <id column="shoes_id" jdbcType="INTEGER" property="shoesId" />
    <result column="shoes_number" jdbcType="INTEGER" property="shoesNumber" />
    <result column="shoes_name" jdbcType="VARCHAR" property="shoesName" />
    <result column="shoes_price_sale" jdbcType="REAL" property="shoesPriceSale" />
    <result column="shoes_discount" jdbcType="REAL" property="shoesDiscount" />
    <result column="shoes_desc" jdbcType="VARCHAR" property="shoesDesc" />
    <result column="shoes_onsale_time" jdbcType="DATE" property="shoesOnsaleTime" />
    <result column="shoes_offsale_time" jdbcType="DATE" property="shoesOffsaleTime" />
    <result column="shoes_sale_count" jdbcType="INTEGER" property="shoesSaleCount" />
    <result column="shoes_gender" jdbcType="TINYINT" property="shoesGender" />
    <result column="shoes_status" jdbcType="TINYINT" property="shoesStatus" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
  </resultMap>

  <resultMap id="ShoesDetail" type="com.aurora.model.entity.ShoesDetail">
    <id column="shoes_detail_id" jdbcType="INTEGER" property="shoesDetailId" />
    <result column="shoes_id" jdbcType="INTEGER" property="shoesId" />
    <result column="shoes_color_id" jdbcType="INTEGER" property="shoesColorId" />
    <result column="shoes_size_id" jdbcType="INTEGER" property="shoesSizeId" />
    <result column="shoes_inventory" jdbcType="INTEGER" property="shoesInventory" />
    <result column="shoes_sale_count" jdbcType="INTEGER" property="shoesSaleCount" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <sql id="Base_Column_List">
    shoes_id, shoes_number, shoes_name, shoes_price_sale, shoes_discount, shoes_desc, 
    shoes_onsale_time, shoes_offsale_time, shoes_sale_count, shoes_gender, shoes_status, 
    category_id
  </sql>

  <!--查询所有鞋子-->
  <select id="queryAll" resultMap="BaseResultMap">
    select * from shoes
  </select>

  <!--根据鞋子名称查询鞋子信息-->
  <select id="queryByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from shoes
    where shoes_name like CONCAT('%', #{shoesName}, '%')
  </select>

    <!--根据鞋子所属性别查询鞋子信息-->
    <select id="queryByGender" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select *
        from shoes
        where shoes_gender = #{gender}
    </select>

    <!--根据鞋子价格范围查询鞋子信息-->
    <select id="queryByPrice" resultMap="BaseResultMap">
        select *
        from shoes
        where shoes_price_sale between #{min} and #{max}
    </select>

    <!--根据鞋子的类别查看鞋子信息-->
    <select id="queryByCategory" resultMap="BaseResultMap">
        select *
        from shoes
        where category_id = #{categoryId}
    </select>

    <!--根据鞋子码数查询鞋子信息-->
    <select id="queryBySize" resultMap="ShoesDetail">
        select *
        from shoes_detail
        where shoes_size_id = (select shoes_size_id from shoes_size where shoes_size = #{size})
    </select>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shoes
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shoes
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aurora.model.entity.Shoes">
    insert into shoes (shoes_id, shoes_number, shoes_name, 
      shoes_price_sale, shoes_discount, shoes_desc, 
      shoes_onsale_time, shoes_offsale_time, shoes_sale_count, 
      shoes_gender, shoes_status, category_id
      )
    values (#{shoesId,jdbcType=INTEGER}, #{shoesNumber,jdbcType=INTEGER}, #{shoesName,jdbcType=VARCHAR}, 
      #{shoesPriceSale,jdbcType=REAL}, #{shoesDiscount,jdbcType=REAL}, #{shoesDesc,jdbcType=VARCHAR}, 
      #{shoesOnsaleTime,jdbcType=DATE}, #{shoesOffsaleTime,jdbcType=DATE}, #{shoesSaleCount,jdbcType=INTEGER}, 
      #{shoesGender,jdbcType=TINYINT}, #{shoesStatus,jdbcType=TINYINT}, #{categoryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aurora.model.entity.Shoes">
    insert into shoes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shoesId != null">
        shoes_id,
      </if>
      <if test="shoesNumber != null">
        shoes_number,
      </if>
      <if test="shoesName != null">
        shoes_name,
      </if>
      <if test="shoesPriceSale != null">
        shoes_price_sale,
      </if>
      <if test="shoesDiscount != null">
        shoes_discount,
      </if>
      <if test="shoesDesc != null">
        shoes_desc,
      </if>
      <if test="shoesOnsaleTime != null">
        shoes_onsale_time,
      </if>
      <if test="shoesOffsaleTime != null">
        shoes_offsale_time,
      </if>
      <if test="shoesSaleCount != null">
        shoes_sale_count,
      </if>
      <if test="shoesGender != null">
        shoes_gender,
      </if>
      <if test="shoesStatus != null">
        shoes_status,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shoesId != null">
        #{shoesId,jdbcType=INTEGER},
      </if>
      <if test="shoesNumber != null">
        #{shoesNumber,jdbcType=INTEGER},
      </if>
      <if test="shoesName != null">
        #{shoesName,jdbcType=VARCHAR},
      </if>
      <if test="shoesPriceSale != null">
        #{shoesPriceSale,jdbcType=REAL},
      </if>
      <if test="shoesDiscount != null">
        #{shoesDiscount,jdbcType=REAL},
      </if>
      <if test="shoesDesc != null">
        #{shoesDesc,jdbcType=VARCHAR},
      </if>
      <if test="shoesOnsaleTime != null">
        #{shoesOnsaleTime,jdbcType=DATE},
      </if>
      <if test="shoesOffsaleTime != null">
        #{shoesOffsaleTime,jdbcType=DATE},
      </if>
      <if test="shoesSaleCount != null">
        #{shoesSaleCount,jdbcType=INTEGER},
      </if>
      <if test="shoesGender != null">
        #{shoesGender,jdbcType=TINYINT},
      </if>
      <if test="shoesStatus != null">
        #{shoesStatus,jdbcType=TINYINT},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aurora.model.entity.Shoes">
    update shoes
    <set>
      <if test="shoesNumber != null">
        shoes_number = #{shoesNumber,jdbcType=INTEGER},
      </if>
      <if test="shoesName != null">
        shoes_name = #{shoesName,jdbcType=VARCHAR},
      </if>
      <if test="shoesPriceSale != null">
        shoes_price_sale = #{shoesPriceSale,jdbcType=REAL},
      </if>
      <if test="shoesDiscount != null">
        shoes_discount = #{shoesDiscount,jdbcType=REAL},
      </if>
      <if test="shoesDesc != null">
        shoes_desc = #{shoesDesc,jdbcType=VARCHAR},
      </if>
      <if test="shoesOnsaleTime != null">
        shoes_onsale_time = #{shoesOnsaleTime,jdbcType=DATE},
      </if>
      <if test="shoesOffsaleTime != null">
        shoes_offsale_time = #{shoesOffsaleTime,jdbcType=DATE},
      </if>
      <if test="shoesSaleCount != null">
        shoes_sale_count = #{shoesSaleCount,jdbcType=INTEGER},
      </if>
      <if test="shoesGender != null">
        shoes_gender = #{shoesGender,jdbcType=TINYINT},
      </if>
      <if test="shoesStatus != null">
        shoes_status = #{shoesStatus,jdbcType=TINYINT},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
    </set>
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aurora.model.entity.Shoes">
    update shoes
    set shoes_number = #{shoesNumber,jdbcType=INTEGER},
      shoes_name = #{shoesName,jdbcType=VARCHAR},
      shoes_price_sale = #{shoesPriceSale,jdbcType=REAL},
      shoes_discount = #{shoesDiscount,jdbcType=REAL},
      shoes_desc = #{shoesDesc,jdbcType=VARCHAR},
      shoes_onsale_time = #{shoesOnsaleTime,jdbcType=DATE},
      shoes_offsale_time = #{shoesOffsaleTime,jdbcType=DATE},
      shoes_sale_count = #{shoesSaleCount,jdbcType=INTEGER},
      shoes_gender = #{shoesGender,jdbcType=TINYINT},
      shoes_status = #{shoesStatus,jdbcType=TINYINT},
      category_id = #{categoryId,jdbcType=INTEGER}
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </update>
</mapper>